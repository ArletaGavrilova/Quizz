import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import config

bot = telebot.TeleBot(config.token)

quiz = [
    {"question": "Вы человек?",
            "options": ["да", "нет", "Нет, я тостер"], "correct": "Нет, я тостер"},

    {"question": "Откуда появисля мем -Ой мама пришла-?",
            "options": ["Из сериала по майнкрафту", "Из АГШ", "Да"], "correct": "Из АГШ"},

    {"question": "Чем мы дышим?",
            "options": ["Цианистым калием ☺", "Пропаном", "Водой ☺", "Водородом", "Чем-то", "Воздухом"], "correct": "Воздухом"},

    {"question": "Что такое BREATHEGE?",
            "options": ["Игра", "Фильм", "Серия игр"], "correct": "Серия игр"},

    {"question": "Кто создал MINECRAFT",
            "options": ["Я", "Нотч", "Маркус Персон", "Майкрософт"], "correct": "Маркус Персон"},

    {"question": "Как называется папка с проектом на моем ноуте?!",
            "options": ["Papochka", "pensil", "pk", "projekt", "sekretnije_fajli_pentagona"], "correct": "sekretnije_fajli_pentagona"},

    {"question": "Как пышно сегодня одеты театральные залы. Здесь и бархатный занавес, и богатые портьеры в ложах, и всяческие там ламберкенчики, и фестончики, и занавесочки, и подборчики. А ведь так в театрах было не всегда. Cherchez la femme. Ищите женщину. И вам станет ясно, почему она и в этом случае стала причиной расточительства.",
            "options": ["Раньше таких пышных залов не было из-за соображений противопожарной безопасности.", "Было не так красиво из за критики народа.", "Было мало денег на ремонт"], "correct": "Раньше таких пышных залов не было из-за соображений противопожарной безопасности."},

    {"question": " 26-летний Лев Толстой писал: «Я люблю добро, но есть вещь, которую я люблю больше добра». Что же он любил больше добра?",
            "options": ["Славу", "Молодость", "Настольные часы", "Своих детей"], "correct": "Славу"},

    {"question": "Какое блюдо в Аргентине символизировало изобилие, если бедность и нищету символизировала вареная говядина?",
            "options": ["Свинина", "Жареная говядина", "Баранина", "Оленина"], "correct": "Жареная говядина."},

    {"question": "Они не будут нагонять тоску, наводить на мысль о катастрофах, напоминать о густых туманах и музыке Вагнера. Они будут заостренными на концах, империалистическими, сверхреалистическими, обращенными к небу, подобно вертикальному мистицизму, подобно вертикальным испанским синдикатам, словно башни Бургосского собора, всегда обращены в небо». О чем говорил Сальвадор Дали?",
            "options": ["О ракетах", "О своих усах", "О бегствии", "Я чё знаю"], "correct": "О своих усах"},

    {"question": "переход на стадию 2! (Сложность) 2+2*2?",
            "options": ["8", "6", "2"], "correct": "6"},
     
    {"question": "Откуда появисля мем -МАЙНКРАФТ МОЯ ЖИЗНЬ-?",
            "options": ["Из сериала по майнкрафту", "Из АГШ", "Да"], "correct": "Из АГШ"},

    {"question": "Что мы едим?",
            "options": ["Крысинный яд", "Я веган, траву", "Веганов", "Импостеров", "Что-то", "Воздух"], "correct": "Веганов"},

    {"question": "Что такое Алцгеймер?",
            "options": ["Что такое Альцгеймер?", "ЩТА", "Какойто геймер"], "correct": "Что такое Альцгеймер?"},

    {"question": "Летели 2 верблюда, 1 рыжий, другой на лево, сколько весить чайная ложка Тролля-А, если Димончик пошол в первый класс в 699435883434858 лет?",
            "options": ["3 Огурца", "Банан", "ЧЕГО", "Майкрософт"], "correct": "3 Огурца"},

    {"question": "Если январь равен 717, март равен 5315, а июнь равен 4624, то чему равен август? Ответьте здесь. Ли ехал, когда заметил, что его милометр показал 16961 и был одинаковым и вперед, и назад. Каким будет следующий миля, который также будет показывать одинаково и вперед, и назад?",
            "options": ["Хз", "зх", "69", "Гомункул", "1945", "Сталин", "Июль", "Чего", "Жить или не жить? Вот в чем вопрос"], "correct": "Сталин"},

    {"question": "Гомер, желая вознести хвалу одному из самых великих своих героев, вместо того чтобы сравнивать его со львом, пантерой или, скажем, кабаном, проводит параллели между неустрашимостью и постоянством своего великого героя и ею. Она никогда не оставит своей добычи, но непременно вернется к ней не один раз, пока не насладится ей полностью. О ком или о чем это Гомер?",
                "options": ["О кошке", "О еде", "О мухе"], "correct": "О мухе"},

    {"question": "В Венском естественно-историческом музее сохранилась таблица, датированная XVII веком — «Краткое описание народов, пребывающих в Европе, и их свойства». В графе «основное времяпрепровождение» напротив поляков написано «распри», напротив венгров — «ходить в гости», напротив англичан — «работа», напротив французов — «обман». А что являлось основным времяпрепровождением русских согласно таблице?",
                "options": ["Мыться в бане", "Сон", "Карта"], "correct": "Сон"},            
]

user_state = {}

@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    user_state[chat_id] = {"score": 0, "question_index": 0}
    bot.send_message(chat_id, "Привет! Давай проверим твои знания. Вот первый вопрос:")
    send_question(chat_id)

def send_question(chat_id):
    index = user_state[chat_id]["question_index"]
    
    if index < len(quiz):
        q = quiz[index]
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        for option in q["options"]:
            markup.add(KeyboardButton(option))
        bot.send_message(chat_id, q["question"], reply_markup=markup)
    else:
        score = user_state[chat_id]["score"]
        bot.send_message(chat_id, f"Викторина окончена! Ты набрал {score} баллов.")
        del user_state[chat_id]



@bot.message_handler(func=lambda message: message.chat.id in user_state)
def check_answer(message):
    chat_id = message.chat.id
    index = user_state[chat_id]["question_index"]
    correct_answer = quiz[index]["correct"]

    if message.text == correct_answer:
        bot.send_message(chat_id, "Правильно!")
        user_state[chat_id]["score"] += 1
    else:
        bot.send_message(chat_id, f"Неправильно! Правильный ответ: {correct_answer}")

    user_state[chat_id]["question_index"] += 1
    send_question(chat_id)


bot.polling()
